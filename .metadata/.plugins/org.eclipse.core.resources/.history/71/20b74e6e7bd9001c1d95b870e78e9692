package Thread;

import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

class Task implements Runnable {
	private int number;

	public Task(int number) {
		this.number = number;
	}

	@Override
	public void run() {
		System.out.println("\nTask "+i+" Started");
		for (int i = number * 100; i < number * 100 + 99; i++) {
			System.out.print(i + " ");
		}
		System.out.println("\nTask 1 Done");
	}
}

public class ExecutorServiceRunner {

	public static void main(String[] args) {
//		ExecutorService executorService = Executors.newSingleThreadExecutor();
		// 한번에 하나의 Thread를 실행하도록 하는 기능
		ExecutorService executorService = Executors.newFixedThreadPool(2);

		executorService.execute(new Task1());
		executorService.execute(new Thread(new Task2()));

		System.out.println("\nTask3 kicked off");
		System.out.println("\nTask 3 Started");
		for (int i = 200; i < 299; i++) {
			System.out.print(i + " ");
		}
		System.out.println("\nTask 3 Done");

		System.out.println("main done");

		executorService.shutdown();
	}

}
