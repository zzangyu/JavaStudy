int x;
System.out.println(x);
위와 같이 하면 에러가 뜬다. 이유는 밑
x값을 초기화하지 않은 상태로 사용하고 있다.
런타임 스택영역에 메모리가 할당 되었기 때문에 변수를 사용하려면 초기화를 해야 사용할 수 있다.
1.main 2.변수 3. 변수안에 들어간 값 4. .....  순으로 들어가고 실행 되는데 3번에서 막힌거임. 실행은 역순임 (스택이기 떄문 LIFO)

1.식별자(identifier, 변수)
	사물 등 모든 것에 대해 각각을 구별할 수 있는 이름
	자바 프로그래밍에서도 사용되는 구성요소(속성과 메소드)를 구별하는 이름 - 속성: 변수, 메소드: 함수
	식별자는 클래스명, 메소드명, 변수명과 같이 서로 구분이 되어야한다. -서로서로 구분이 되어야 한다는 의미

2. 식별자의 규칙
	첫 글자는 _, $, 영문 대소문자(한글도 가능하지만 메모리 문제 때문에 사용을 규제함)
	공백문자(스페이스바) 및 특수문자는 사용불가
	시작을 숫자로 하지 않는다.
	예약어는 사용불가 - 예약어: abstract, assert, boolean, break, byte, case, catch ..etc. 자바 책 p.25 참조
	글자 수는 제한이 없으나 식별이 가능하게 작성해야한다.
	
클래스 명을 정의하는 규칙
	첫 문자는 항상 대문자로 작성한다.
	하나 이상의 단어가 모여서 클래스명으로 지정될 때 단어의 첫 문자들만 대문자로 작성한다.
	클래스의 이름을 정의할 때 ★★★반드시★★★ 파일명과 이름이 같아야 한다.
	숫자로 시작하면, 공백을 포함하면, 예약어를 사용하면 안된다.
	첫 문자를 _, $ 이외의 특사문자로 시작하면 안된다.
	
주석문
	소스코드의 기능이나 동작을 설명하기 위해 사용하는 것이다.
	소스코드에는 영향을 미치지 않는다.
	프로그래머 자신이나 다른 개발자들이 소스코드를 분석하기 쉽게 하기 위함이다.
	// ▶ 단행 주석 처리
	/*  */ ▶ 다중 주석 처리
	/** */ ▶ javadoc 문서화 한다. API에 설명을 기술할 때 사용한다.
	
★★★상수와 변수의 개념★★★
	상수: 고유한 데이터의 값으로 항상 동일한 의미를 가지는 개체다. (변수를 가지고 상수로 쓸 수 있다. - final 사용)
		int x = 10;                final x = 10;
		x = 20; 이건 되는데        x = 20; 이건 안된다.     ▶ final 변수를 가지고 변화하고 싶지 않을 때 쓰는 것
		System.out.println(Math.PI); ▶ 파이 값은 고정이라 변하지 않는다.

	변수: 컴퓨터 메모리에 상수를 저장하거나 보관하는 공간이다.
	변수명: 변수에 대한 이름

기본 자료형과 참조형
	자료형: 변수의 크기를 미리 만들어 넣은 것이다.
	기본 자료형
		기본자료형(자바의 8가지 자료형)
		자바 컴파일러에 의해서 해석되는 자료형
		기본 자료형  ▶ 낮은거+높은거하면 높은게 나온다. ex) 정수+실수=실수 short+int=int / int+short=short하면 문제가 생기는데 이를 해결 할 수 있다.(Day0413charex참조)
			문자형 char
			논리형 boolean
			숫자형 - 정수형 byte
							 short
							 int
							 long
					  실수형 float
					         double
	참조 자료형(기본 자료형을 제외한 나머지 타입) - 메모리주소를 저장함. 그 주소를 찾아서 거기 안에 있는 값을 쓰는것이다.
		자바의 api에서 제공되거나 프로그래머에 의해서 만들어진 클래스를 자료형으로 선언하는 경우를 의미함(배열, 클래스)
		참조 자료형
			클래스 string
			인터페이스 collection
			배열 []
 
 아스키코드 (Day0413-CharEx)
 	0~9:48~57
 	영어 대문자: 65~90
 	영어 소문자: 97~122
 	ex) a=A(65)+32

	
	
	